{
  "name": "debuggo",
  "version": "0.0.0-development",
  "description": "General purpose debug library based on visionmedia/debug",
  "main": "dist/index.js",
  "typings": "dist/index.d.ts",
  "directories": {
    "test": "dist/test"
  },
  "scripts": {
    "clean": "rimraf dist coverage .nyc_output",
    "clean:all": "npm run clean && rimraf node_modules",
    "prebuild": "rimraf dist",
    "build": "tsc",
    "precommit": "npm run build && npm run cover && npm run check-coverage",
    "commit": "git-cz",
    "check-coverage": "nyc check-coverage --statements 100 --branches 100 --functions 84 --lines 100",
    "report-coverage": "cat ./coverage/lcov.info | coveralls",
    "watch:test": "npm t -- -w",
    "test": "tsc -p test && DEBUG=test-*:* mocha test/*.test.js",
    "cover": "nyc --reporter=lcov --reporter=text npm t",
    "semantic-release": "semantic-release"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/vivocha/debuggo.git"
  },
  "files": [
    "dist/**/*.js",
    "dist/**/*.ts",
    "README.md",
    "LICENSE"
  ],
  "author": "Vivocha <dev@vivocha.com> (http://www.vivocha.com/)",
  "license": "MIT",
  "devDependencies": {
    "@commitlint/cli": "^8.3.5",
    "@commitlint/config-conventional": "^8.3.4",
    "@types/chai": "^4.2.11",
    "@types/chai-as-promised": "7.1.2",
    "@types/chai-spies": "1.0.1",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.11.1",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "chai-spies": "^1.0.0",
    "commitizen": "^4.0.4",
    "coveralls": "^3.0.11",
    "cz-conventional-changelog": "^3.1.0",
    "husky": "^4.2.5",
    "mocha": "^7.1.1",
    "nyc": "^15.0.1",
    "rimraf": "^3.0.2",
    "semantic-release": "^17.0.4",
    "typescript": "^3.8.3"
  },
  "dependencies": {
    "@types/debug": "4.1.5",
    "debug": "^4.1.1"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "npm run build && npm run cover && npm run check-coverage"
    }
  },
  "nyc": {
    "include": [
      "dist/**/*.js",
      "src/**/*.ts"
    ],
    "extension": [
      ".js",
      ".ts"
    ],
    "exclude": [
      "**/test"
    ],
    "reporter": [
      "lcov",
      "text"
    ],
    "sourceMap": true
  }
}
